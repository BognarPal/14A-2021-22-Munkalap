// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using munkalap.service;

namespace munkalap.service.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211005081822_Initialization")]
    partial class Initialization
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("munkalap.service.models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Béla"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Géza"
                        });
                });

            modelBuilder.Entity("munkalap.service.models.Failure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AssignComment")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("AssignTimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("AssignedId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("FinishComment")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<bool?>("IsChecked")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("IssueTimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Issuer")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasColumnType("varchar(30) CHARACTER SET utf8mb4")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("WorkFinished")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("WorkStarted")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AssignedId");

                    b.ToTable("Failures");
                });

            modelBuilder.Entity("munkalap.service.models.Failure", b =>
                {
                    b.HasOne("munkalap.service.models.Employee", "Assigned")
                        .WithMany()
                        .HasForeignKey("AssignedId");
                });
#pragma warning restore 612, 618
        }
    }
}
